"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
import logging
from logging.handlers import RotatingFileHandler

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-qjlo+y5&=9g9+30s-1n^4tlcwt8jo03%qv_(@g5xobx2b!438#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['oriontax.f5sys.com.br', '127.0.0.1',  '201.48.245.247', '34.234.142.81', '18.204.98.107', '172.16.10.248', 'localhost', 'oriontax-beta.f5sys.com.br']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'rest_framework',
    'rest_framework.authtoken',
    'rolepermissions',
    'crispy_forms',
    'widget_tweaks',
    'accounts',
    'home',
    'erp',
    'clients',
    'impostos',
    'items',
    'tasks',
    'accountings',
    'auditlog',
    'api',
    'sales',
    'notifications',
    'cattles',
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'auditlog.middleware.AuditlogMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['app/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'oriontax',
        'USER': 'oriondb',
        'PASSWORD': 'orion@2024',
        'HOST': 'localhost',
        'PORT': '5433',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

DATA_UPLOAD_MAX_MEMORY_SIZE = 20 * 1024 * 1024  # 20 MB


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTHENTICATION_BACKENDS = (
    'accounts.backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',
)

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),       
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.umbler.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'contato@f5sys.com.br'
EMAIL_HOST_PASSWORD = 'ic3h@wkk'
DEFAULT_FROM_EMAIL = 'contato@f5sys.com.br'

logs_dir = os.path.join(BASE_DIR, 'logs')
os.makedirs(logs_dir, exist_ok=True)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            # Nível para o handler de arquivo em produção: INFO
            # Isso capturará INFO, WARNING, ERROR, CRITICAL.
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            # Você pode querer um nome de arquivo diferente para logs de produção
            'filename': os.path.join(logs_dir, 'django_production.log'),
            'maxBytes': 1024 * 1024 * 5,  # 5 MB
            'backupCount': 5,
            'formatter': 'verbose',
        },
        'console': {
            # Nível para o console em produção: INFO ou WARNING
            # Se INFO for muito verboso no console, você pode mudar para 'WARNING'.
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        # Em produção, você pode querer um handler específico para erros críticos,
        # como enviar e-mails para administradores. Exemplo:
        # 'mail_admins': {
        #     'level': 'ERROR',
        #     'class': 'django.utils.log.AdminEmailHandler',
        #     'formatter': 'verbose', # ou um formato específico para e-mails
        # }
    },
    'loggers': {
        'django': {
            # Os handlers que este logger utilizará.
            # Poderia adicionar 'mail_admins' aqui se o tivesse definido.
            'handlers': ['console', 'file'],
            # Nível para o logger 'django' em produção: INFO
            # O logger só passará mensagens deste nível ou superior para os handlers.
            'level': 'INFO',
            'propagate': True, # Padrão. Se False, não passa para loggers pai (ex: root).
        },
        # É uma boa prática configurar o logger root para capturar logs
        # de outras bibliotecas ou logs não capturados por loggers específicos.
        'root': {
            'handlers': ['console', 'file'], # Ou apenas ['file'] para produção
            'level': 'INFO', # Nível base para todos os logs não especificados
        },
        # Você também pode definir loggers para suas próprias apps com níveis específicos:
        # 'sua_app': {
        #     'handlers': ['console', 'file'],
        #     'level': 'INFO', # Ou DEBUG durante o desenvolvimento da app específica
        #     'propagate': False, # Para não duplicar msgs se o root também usa os mesmos handlers
        # },
        # Para bibliotecas de terceiros que são muito verbosas:
        # 'some_third_party_library': {
        #     'handlers': ['file'], # Enviar para arquivo, talvez não para console
        #     'level': 'WARNING',   # Só registrar warnings ou erros dessa biblioteca
        #     'propagate': False,
        # },
    },
}

ROLEPERMISSIONS_MODULE = 'app.permissions.roles'

CSRF_TRUSTED_ORIGINS = [
    'https://oriontax.f5sys.com.br',
    # Adicione outros domínios, se necessário
]


